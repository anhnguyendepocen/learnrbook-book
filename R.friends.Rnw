% !Rnw root = appendix.main.Rnw

<<echo=FALSE, include=FALSE>>=
opts_chunk$set(opts_fig_wide)
opts_knit$set(concordance=TRUE)
@

\chapter{If and when R needs help}\label{chap:R:performance}

\section{Introduction}

S (R is sometimes called Gnu S) is a very well designed language, but it was designed with a specific purpose in mind. No tool can handle efficiently and gracefully every task one may want to throw at it. R is no different. However, R is good at working together with other languages and tools. As for most tasks in life, for data analysis one may find the best tools for our toolbox scattered around the place and coming from different sources. What is important in any tool pack is that all the tools can be used together in an efficient and `fluid' combination. In this final chapter, I will give an overview of what is available, giving only minimal examples, as a teaser for readers to explore on their own what may be most useful for their jobs.

\section{R's limitations and strengths}

\subsection{Using the best tool for each job}

\subsection{R is great, but}

\subsection{On choice versus fashion}

\subsection{On finding one's own way around}

\subsection{Getting around performance issues}

\subsection{Re-using code writing in other languages}

\section{C++}

\section{FORTRAN and C}

\section{Phyton}

\section{Java}

\section{Javascript}

\section{sh, bash}
